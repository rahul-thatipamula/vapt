include <stdio.h>
#include <ctype.h>
#include <string.h>

// List of C keywords
const char *keywords[34] = {
    "auto", "break", "case", "char", "const", "continue", "default", "do", "double", "else", 
    "enum", "extern", "float", "for", "goto", "if", "inline", "int", "long", "register", 
    "restrict", "return", "short", "signed", "sizeof", "static", "struct", "switch", "typedef", 
    "union", "unsigned", "void", "volatile", "while"
};

// Function to check if the word is a keyword
int is_keyword(const char *str) {
    for (int i = 0; i < 34; i++) {  // Check all 34 keywords
        if (strcmp(str, keywords[i]) == 0) return 1;
    }
    return 0;
}

// Function to check if the word is a valid identifier
int is_identifier(const char *str) {
    if (isalpha(str[0]) || str[0] == '_') {
        for (int i = 1; str[i]; i++) if (!isalnum(str[i]) && str[i] != '_') return 0;
        return 1;
    }
    return 0;
}

// Function to check if the word is a number
int is_number(const char *str) {
    for (int i = 0; str[i]; i++) if (!isdigit(str[i])) return 0;
    return 1;
}

// Function to process the input
void process_input() {
    char input[100], word[50];
    int i = 0, j = 0;
    
    printf("Enter input: ");
    fgets(input, sizeof(input), stdin);
    
    // Remove the newline character if it's present at the end of input
    if (input[strlen(input) - 1] == '\n') {
        input[strlen(input) - 1] = '\0';
    }

    // Process each character or word in the input
    while (input[i]) {
        if (isspace(input[i])) {
            i++; 
            continue;
        }

        if (isalpha(input[i]) || input[i] == '_') {
            j = 0;
            // Extract a word (identifier or keyword)
            while (isalnum(input[i]) || input[i] == '_') word[j++] = input[i++];
            word[j] = '\0';

            // Check if it's a keyword or identifier
            if (is_keyword(word)) 
                printf("Keyword: %s\n", word);
            else if (is_identifier(word)) 
                printf("Identifier: %s\n", word);
        }
        else if (isdigit(input[i])) {
            j = 0;
            // Extract a number
            while (isdigit(input[i])) word[j++] = input[i++];
            word[j] = '\0';
            printf("Number: %s\n", word);
        }
        else {
            // If it's an operator, just print it
            printf("Operator: %c\n", input[i]);
            i++;
        }
    }
}



int main() {
    process_input();
    return 0;
}
