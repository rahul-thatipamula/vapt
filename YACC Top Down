11) Write a YACC program to implement top down parser for the given grammar.
Grammar:
E->TE’
E’->+TE’| E
T->FT’
T’->*FT’| E
F->(E) | ID

%{
#include <stdio.h>
#include <stdlib.h>
%}

%token NUM ID PLUS TIMES LPAREN RPAREN

%%
program     : expr { printf("Valid expression!\n"); }
            ;

expr        : term expr_prime
            ;

expr_prime  : PLUS term expr_prime
            | /* epsilon */
            ;

term        : factor term_prime
            ;

term_prime  : TIMES factor term_prime
            | /* epsilon */
            ;

factor      : LPAREN expr RPAREN
            | ID
            | NUM
            ;
%%

int main() {
    yyparse();
    return 0;
}

int yyerror(char *s) {
    printf("Parse error: %s\n", s);
    return 0;
}
